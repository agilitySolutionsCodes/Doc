@model MvcDocs.Models.Usuario
@using MvcDocs.Models
@{ViewBag.Title = "Registrar";}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>Criar uma nova conta.</h2>
</hgroup>
<script src="~/Scripts/dropzone/dropzone.min.js"></script>



@*@using (Html.BeginForm("Registrar", "Conta", FormMethod.Post, new { enctype = "multipart/form-data", @class = "FormRegistrar" }))
{*@
    
    
    @section scripts{
        <script type="text/javascript">
            //File Upload response from the server
            Dropzone.options.dropzoneForm = {
                maxFiles: 2,
                init: function () {
                    this.on("maxfilesexceeded", function (data) {
                        var res = eval('(' + data.xhr.responseText + ')');
                    });
                    this.on("addedfile", function (file) {
                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button>Remove file</button>");
                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                    });
                }
            };
        </script>

        <script type="text/javascript">
            var password = document.getElementById("Senha")
            , confirm_password = document.getElementById("ConfirmacaoSenha");

            function validatePassword() {
                if (password.value != confirm_password.value) {
                    confirm_password.setCustomValidity("Senhas não correspondem");
                } else {
                    confirm_password.setCustomValidity('');
                }
            }

            password.onchange = validatePassword;
            confirm_password.onkeyup = validatePassword;
        </script>
    }
    
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <fieldset>
        <legend>Registration Form</legend>
        <div class="dvFormLeft">
            <ol>
                <li>
                    @Html.Label("Nome", new { @class = "LblForm" })
                    @Html.TextBox("Nome", "", new { placeholder = "", @required = "", @type = "text", @class = "TxtForm" })
                </li>
                <li>
                    @Html.Label("Email", new { @class = "LblForm" })
                    @Html.TextBox("Email", "", new { placeholder = "", @required = "", @type = "email", @class = "TxtForm" })
                </li>
                <li>
                    @Html.Label("Senha", new { @class = "LblForm" })
                    @Html.TextBox("Senha", "", new { placeholder = "", @required = "", @type = "password", @class = "TxtForm" })
                </li>
                <li>
                    @Html.Label("Avatar", new { @class = "LblForm" })
                    <div class="jumbotron">
                        <form action="~/Home/SaveUploadedFile" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
                            <div class="fallback">
                                <input name="file" type="file" />
                                <input type="submit" value="Upload" />
                            </div>
                        </form>
                    </div>
                </li>
            </ol>
        </div>
        <div class="dvFormRight">
            <ol>
                <li>
                    @Html.Label("Sobrenome", new { @class = "LblForm" })
                    @Html.Password("Sobrenome", "", new { placeholder = "", @required = "", @type = "text", @class = "TxtForm" })
                </li>
                <li>
                    @Html.Label("Data Nascimento", new { @class = "LblForm" })
                    @Html.Password("DataNascimento", "", new { placeholder = "", @required = "", @type = "date", @class = "TxtForm" })
                </li>
                <li>
                    @Html.Label("Confirmar Senha", new { @class = "LblForm" })
                    @Html.TextBox("ConfirmacaoSenha", "", new { placeholder = "", @required = "", @type = "password", @class = "TxtForm" })
                </li>
                <li>
                    @Html.Label("Perfil", new { @class = "LblForm" })
                    @Html.DropDownListFor(p => p.Perfil, Enum.GetValues(typeof(MvcDocs.Models.Usuario.Perfis)).Cast<MvcDocs.Models.Usuario.Perfis>().Select(c => new SelectListItem { Text = c.ToString(), Value = ((int)c).ToString() }), new { @class = "SelectPerfil" })
                </li>
            </ol>
        </div>
        <input class="inputSubmit" type="submit" value="Registrar" />
    </fieldset>
@*}*@
